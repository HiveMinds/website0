from _typeshed import Incomplete

class Error(Exception): ...
class RequestError(Error): ...
class RequestSetupError(RequestError): ...
class IdentifierError(RequestSetupError): ...

class ResponseHandlingError(Error):
    idempotency_key: str
    def __init__(self, message, idempotency_key: str = ...) -> None: ...

class ResponseError(Error):
    status: Incomplete
    field: Incomplete
    idempotency_key: str
    def __init__(self, resp: Incomplete | None = ..., idempotency_key: str = ...) -> None: ...
    @staticmethod
    def factory(resp, idempotency_key: str = ...): ...
    def __reduce__(self): ...

class UnauthorizedError(ResponseError): ...
class NotFoundError(ResponseError): ...
class BadRequestError(ResponseError): ...
class ConflictError(ResponseError): ...
class UnprocessableEntityError(ResponseError): ...
class DataConsistencyError(Error): ...

class EmbedNotFound(Error):
    def __init__(self, name) -> None: ...

class RemovedIn27Warning(DeprecationWarning): ...
class RemovedIn28Warning(PendingDeprecationWarning): ...
class APIDeprecationWarning(DeprecationWarning): ...
